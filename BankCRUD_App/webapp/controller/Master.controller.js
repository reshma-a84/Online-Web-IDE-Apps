sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"sap/ui/core/Fragment",
	"sap/m/MessageToast",
		"sap/m/MessageBox"
], function(Controller, Fragment, MessageToast, MessageBox) {
	"use strict";
	var oPath ;
	var selectedvalue = {};
	var idFrag = "idFragment";
	return Controller.extend("BankCRUD_App.controller.Master", {

		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf BankCRUD_App.view.Master
		 */
		//	onInit: function() {
		//
		//	},
		/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf BankCRUD_App.view.Master
		 */
		//	onBeforeRendering: function() {
		//
		//	},
		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf BankCRUD_App.view.Master
		 */
		//	onAfterRendering: function() {
		//
		//	},
		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf BankCRUD_App.view.Master*/
		/*onExit: function() {
			if (this._oDialog) {
				this._oDialog().destroy();
			}
		},*/
		/**
		 *@memberOf BankCRUD_App.controller.Master*/
		  _oDialog : function() {
                // create a fragment with dialog, and pass the selected data
                if (!this.dialog) {
                    // This fragment can be instantiated from a controller as follows:
                    this.dialog = sap.ui.xmlfragment(idFrag,"BankCRUD_App.Fragments.Bank_Create_Fragment", this);
                    
                }
               
                return this.dialog;
            },
		openDialog: function(oEvent) {
				this._oDialog().open();
		},
		
		//This code was generated by the layout editor.
		onAdd: function(evt) {
			var oModel = this.getOwnerComponent().getModel();
			var oEntry = {};
			oEntry.BankKey = sap.ui.getCore().byId("idFragment--bankKey").getValue();
			oEntry.BankName = sap.ui.getCore().byId("idFragment--bankName").getValue();
			oEntry.Street = sap.ui.getCore().byId("idFragment--street").getValue();
			oEntry.City = sap.ui.getCore().byId("idFragment--city").getValue();
			oEntry.State = sap.ui.getCore().byId("idFragment--state").getValue();
			oEntry.Country = sap.ui.getCore().byId("idFragment--country").getValue();
			oEntry.BankNumber = sap.ui.getCore().byId("idFragment--bankNumber").getValue();
			oEntry.Branch = sap.ui.getCore().byId("idFragment--branch").getValue();
			oEntry.RoutingNumber = sap.ui.getCore().byId("idFragment--routingNumber").getValue();
			var mParameters = {};
			mParameters.success = function(oData, response) {
				MessageToast.show("created successfully");
			};
			mParameters.error = function(oData, response) {
				MessageToast.show("Create failed");
			};
			oModel.create("/Banks", oEntry, mParameters);
		},
		onUpdate: function(evt) {
				 var oList = this.getView().byId("__list0");
				 var bank_key = evt.getSource().getBindingContext().getProperty("BankKey");
		
			this._oDialog().open();
         //	var kum = selectedvalue.BankKey;
		//	var anj = this.byId("bankKey").setValue(kum);
			   
		//		this.getView().getModel().
					// var selectedProductID = evt.getSource().getBindingContext().getProperty("ProductID");
			
			//	var bankKey = selectedBank.getSelectedItem().getBindingContext().getProperty("BankKey");
		//	sap.ui.getCore().byId("bankKey").setValue("BankKey");
		sap.ui.getCore().byId("idFragment--bankKey").setValue(bank_key);	
				
		},
		/**
		 *@memberOf BankCRUD_App.controller.Master
		 */ 
		handleListItemPress: function(evt) {
			//This code was generated by the layout editor.
			var oView = this.getView();
		
		/*	selectedvalue.BankKey = evt.getSource().getBindingContext().getProperty("BankKey");
			selectedvalue.BankName = evt.getSource().getBindingContext().getProperty("BankName");
			selectedvalue.street = evt.getSource().getBindingContext().getProperty("street");
			selectedvalue.City = evt.getSource().getBindingContext().getProperty("City");
			selectedvalue.State = evt.getSource().getBindingContext().getProperty("State");
			selectedvalue.Country = evt.getSource().getBindingContext().getProperty("Country");
			selectedvalue.BankNumber = evt.getSource().getBindingContext().getProperty("BankNumber");
			selectedvalue.RoutingNumber = evt.getSource().getBindingContext().getProperty("RoutingNumber");*/
			//var selectedProductID = evt.getSource().getBindingContext().getParameter("listItem");
		
		
			
			var oSelectedItem = evt.getParameter("listItem");
			var oSource = evt.getSource();
		    var oContext = oSource.getBindingContext();
		
		//	oPath = evt.getSource().getBindingContext().getPath();
		
		
			oPath = oContext.getPath();
			var oFragment = this.byId("idFragment");
			oFragment.bindElement({path:oPath});
			
			
			// var selectedProductName = evt.getSource().getBindingContext().getProperty("BankName");
			// MessageBox.alert("you have clicked " + selectedProductName); 
			oView.byId("updateButton").setEnabled(true);
		//	this.onUpdate();
			oView.byId("deleteButton").setEnabled(true);
		},
		/**
		 *@memberOf BankCRUD_App.controller.Master
		 */
		onCancel: function() {
			//This code was generated by the layout editor.
			var oView = this.getView();
			oView.byId("updateButton").setEnabled(false);
			oView.byId("deleteButton").setEnabled(false);
			
		},
		onClose: function(){
			this._oDialog().close();
		}
	});
});